--  Retrieve all orders placed by Alice.select CustomerName,count(OrderID) as ordersfrom customer cujoin ORDERs ordon cu.CustomerID = ord.CustomerIDwhere CustomerName = 'Alice'group by CustomerName--  Find the total revenue generated (Price × Quantity) for all orders.select count(OrderID) as all_orders, sum(price*quantity) as total_revenuefrom ORDERs-- List the total quantity of products ordered in each category.select Category,sum(Quantity) as total_quantityfrom ORDERsgroup by Categoryorder by total_quantity desc--  Find the most expensive product ordered.select Product,max(Price) as pricefrom ORDERsgroup by Productorder by price desc-- Retrieve the orders where the total amount (Price × Quantity) exceeds $500.select OrderID, sum(Price*Quantity) total_amountfrom ORDERsgroup by OrderIDhaving sum(Price*Quantity) > 500-- Count the number of orders placed in January 2025select count(OrderID) as total_ordersfrom ORDERswhere OrderDate between '2025-01-01' and '2025-01-31'-- Get the name of customers who ordered products in the "Furniture" category.select CustomerName,Categoryfrom customer cujoin ORDERs ordon cu.CustomerID = ord.CustomerIDwhere Category = 'Furniture'-- List the product and total sales amount for each product (Price × Quantity).select  Product, sum(price * Quantity) as total_sales_amountfrom ORDERsgroup by Product-- Find the average price of products in the "Electronics" category.select Category,avg(price) as avg_pricefrom ORDERsgroup by Categoryorder by avg_price desc-- Display all products with a stock of more than 2 but less than 5 unitsselect Product, Quantityfrom ORDERs where Quantity between '2' and '5'-- Retrieve the total revenue generated by each customerselect CustomerName,sum(price*Quantity) as total_revenuefrom ORDERs ordjoin customer cuon ord.CustomerID = cu.CustomerIDgroup by CustomerNameorder by total_revenue desc-- Find the second-highest total revenue generated by a customer.select CustomerName,total_revenuefrom(select CustomerName, sum(Price*Quantity) as total_revenue,RANK() over (order by sum(Price*Quantity)desc) as RevenueRankfrom customer cujoin ORDERs ordon cu.CustomerID = ord.CustomerIDgroup by CustomerName) rankedRevenuewhere RevenueRank = 2;-- . List all orders along with the cumulative revenue for each customer.select OrderID,CustomerName,Price*Quantity as order_revenue,sum(price*Quantity) over (partition by CustomerName order by OrderDate) as cumulative_revenuefrom customer cujoin ORDERs ord on cu.CustomerID = ord.CustomerID-- Find the most purchased product (by quantity) in each category.select Category,Product, max(total_quanitity) as max_qualityfrom(select Product,Category,sum(Quantity) as total_quanitityfrom ORDERsgroup by Product, Category)products_totalsgroup by Product,Category-- Get the top 2 products with the highest total sales revenue in each category.select Product,Category,total_revenuefrom(select Product,Category,sum(Price*Quantity) as total_revenue,rank() over (partition by Category order by sum(price * quantity)desc) as rank_categoryfrom ORDERsgroup by Product,Category) rankedproductswhere rank_category <= 2;-- Find the percentage of total revenue contributed by each customerselect CustomerName, sum(price*Quantity) as total_revenue,(sum(price*quantity)*100 / (select sum(price*Quantity) from ORDERs)) as revenue_percentagefrom customer cujoin ORDERs ordon cu.CustomerID = ord.CustomerIDgroup by CustomerName-- Identify customers who have only purchased products from one categoryselect CustomerNamefrom customer cujoin ORDERs ordon cu.CustomerID = ord.CustomerIDgroup by CustomerNamehaving count(distinct category) = 1;